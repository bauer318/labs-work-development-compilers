 /*LexicalErrorAnalyzer lex = new LexicalErrorAnalyzer();
            string expr = "(a+b)*(c+d)-25/0"; //   9-(5+2)
            if (lex.IsLexicalyCorrectExpresion(expr))
            {
                SyntacticalErrorAnalyzer syn = new SyntacticalErrorAnalyzer(lex.Tokens, lex.SymbolTable);
                Parser parser = new Parser(syn);
                parser.ParseExpression();
                Console.WriteLine("Syntax");
                foreach(string str in parser.GetSyntaxTreeNodeTextArray())
                {
                    Console.WriteLine(str);
                }
                SyntacticalTreeModificator synT = new SyntacticalTreeModificator(parser.GetAbstractSyntaxTree(), lex.SymbolTable);
                synT.RealizeTopBottomSyntaxTreeModification();
                SemanticErrorAnalyzer sem = new SemanticErrorAnalyzer(synT.SyntaxTreeModified);
                if (sem.CanWriteSyntaxTreeModFileText)
                {
                    Console.WriteLine("Sem");
                    foreach(string str in synT.GetSemanticTreeTextList())
                    {
                        Console.WriteLine(str);
                    }
                    IntermediateCodeGenerator gen = new IntermediateCodeGenerator(synT.SyntaxTreeModified,synT.SymboleTable);
                    Console.WriteLine("Portable code");
                    foreach(string str in gen.GetPortableCodeText())
                    {
                        Console.WriteLine(str);
                    }
                    Console.WriteLine("Symbol table");
                    foreach(string str in gen.GetSymboleTableText())
                    {
                        Console.WriteLine(str);
                    }
                    Console.WriteLine("Post fix");
                    foreach(string str in gen.GetPostFixExpressionText())
                    {
                        Console.Write(str);
                    }
                    
                }
            }*/